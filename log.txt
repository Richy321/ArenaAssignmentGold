Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
//////////////////////////////////////////////////////////////////////////////////////////
//
// Default vertex shader for materials. Extend this to deal with bump mapping, defered rendering, shadows etc.
//

// matrices
uniform mat4 modelToProjection;
uniform mat4 modelToCamera;

// attributes from vertex buffer
attribute vec4 pos;
attribute vec2 uv;
attribute vec3 normal;
attribute vec4 color;

uniform float progress;
uniform float fromExtrudeUniform;
uniform float toExtrudeUniform;

// outputs
varying vec3 normal_;
varying vec3 camera_pos_;
varying vec2 uv_;
varying vec4 color_;
varying vec3 model_pos_;

void main() 
{
  vec4 newPos;
  newPos.x = pos.x + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.y = pos.y + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));
  newPos.z = pos.z + (normal * mix(fromExtrudeUniform, toExtrudeUniform, progress));

  gl_Position = modelToProjection * newPos;
  vec3 tnormal = (modelToCamera * vec4(normal, 0.0)).xyz;
  vec3 tpos = (modelToCamera * pos).xyz;
  normal_ = tnormal;
  camera_pos_ = tpos;
  uv_ = uv;
  color_ = color;
  model_pos_ = pos.xyz;
}





program errors
Attached vertex shader is not compiled.
Vertex shader error:
ERROR: 0:30: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:31: 'assign' :  cannot convert from '3-component vector of float' to 'float'
ERROR: 0:32: 'assign' :  cannot convert from '3-component vector of float' to 'floa
///////////////////////////////////